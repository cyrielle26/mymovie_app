import React from 'react';
import styled from 'styled-components';

const export SearchFormContainer = styled.div`
  // Add your styling here
`;

const SearchForm = () => {
  return (
    <SearchFormContainer className="search-form">
      <form>
        <input type="text" />
        <button></button>
      </form>
    </SearchFormContainer>
  );
};





import styled from 'styled-components';

export const SearchFormContainer = styled.div`
  position: relative;
  font-size: 1.5em;
  background: linear-gradient(21deg, #10abff, #1beabd);
  padding: 3px;
  display: inline-block;
  border-radius: 9999em;

  input {
    position: relative;
    display: inherit;
    border-radius: inherit;
    margin: 0;
    border: none;
    outline: none;
    padding: 0 0.325em;
    z-index: 1;

    &:focus + span {
      opacity: 1;
      transform: scale(1);
    }
  }

  span {
    transform: scale(0.993, 0.94);
    transition: transform 0.5s, opacity 0.25s;
    opacity: 0;
    position: absolute;
    z-index: 0;
    margin: 4px;
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;
    border-radius: inherit;
    pointer-events: none;

    box-shadow: inset 0 0 0 3px #fff,
      0 0 0 4px #fff,
      3px -3px 30px #1beabd, 
      -3px 3px 30px #10abff;
  }
`;

export const GlobalStyle = styled.div`
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  line-height: 1.5;
  font-size: 1em;
  text-align: center;
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100%;

  input {
    font-family: inherit;
    line-height: inherit;
    color: #2e3750;
    min-width: 12em;

    &::placeholder {
      color: #cbd0d5;
    }
  }

  &::after {
    content: '';
    background: linear-gradient(21deg, #10abff, #1beabd);
    height: 3px;
    width: 100%;
    position: absolute;
    left: 0;
    top: 0;
  }
`;


import React, { useState } from 'react';
import { SearchFormContainer } from './YourStyledComponentsFile'; // Replace with the actual path

const SearchForm = () => {
  const [isActive, setIsActive] = useState(false);
  const [isFocus, setIsFocus] = useState(false);

  const handleButtonClick = (e) => {
    e.preventDefault();
    setIsActive((prev) => !prev);
  };

  const handleInputFocus = () => {
    setIsFocus(true);
  };

  const handleInputBlur = (e) => {
    setIsFocus(e.target.value.length !== 0);
  };

  return (
    <SearchFormContainer className={`search-form ${isActive ? 'active' : ''} ${isFocus ? 'focus' : ''}`}>
      <form>
        <input
          type="text"
          onFocus={handleInputFocus}
          onBlur={handleInputBlur}
        />
        <button onClick={handleButtonClick}></button>
      </form>
    </SearchFormContainer>
  );
};

export default SearchForm;